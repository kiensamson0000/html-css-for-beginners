--------------------------------------------------------------------------------------------------------------
	

SUMMARY HTML-CSS Couses trên F8:
 
-----------------------------------[10/02/2022]
-----------------------------------[21/02/20222]
-----------------------------------[22/02/20222]


I. Skill:
- Xd đc UI/UX website bky.
- Pt chi tiết th.ph 1 web.
- Đặt tên class theo chuẩn BEM.
- Dựng bố cục layout web vs Flexbox.
- Làm UI web responsive.
- Làm hieu ứng vs Animation. 
- Anything skills.

II. Link document
- https://docs.google.com/document/d/1oJG3vTV7llMJ1xFGuTi_2IypXqXJ8JzxfHEkEkeeMqM/edit?usp=sharing 

=============================================================================================================
=============================================================================================================

--PART 1: HTML-CSS
-------------------------------------------
- Dev tools? --> Inspect Element (ấn F12 --> run): function tags: Elements, Styles, Console, Source,...
- Link document HTML: https://www.w3schools.com/html/default.asp 
- Link document css: https://www.w3schools.com/cssref/css_selectors.asp
- Tip: 
	+) gõ code nhanh HTML (create div, các thẻ html, đặt tên id, class,..) => search gg
	+) use “emmet” để code HTML&CSS nhanh hơn = phím tắt, đọc document.
- How to create new project: 
	+) create fast folder & file, e.g: assets/css/base.css --> ấn "tab"

-------------------------------------------

1.1. HTML
-------------
- HTML?
- Cau truc? 
- Tip: comment?, 
- Tag thong dung: <h1-h6>, <p>, <br>, <hr>, <img>, <a>, <ul>/<ol><li>, <table> (<th> --> <tr> --> <td>), <input>, <button>, <div>(div: tính chất khối, phân tách rõ dàng),...  => đọc document
- Attribute in html: thuộc tính in tag của html, e.g: title,.... 


1.2. CSS
-------------
- CSS?
- how to use in html(declare, use): 3 pp: internal, external, inline => external ưu tiên use, 2 loại còn lại use 1 số trg hợp đb, e.g: css inline(email, background-image).

1.2.1. ID, Class: 
	- how to đặt tên ID, (id: định danh duy nhất, e.g: id="app-header" => call: #app-header{})
	- how to đặt tên class, class: use 1/n` ptu khác nhau, e.g: class="app-navbar" => call: .app-navbar{})
		+) đặt tên 2/n` class = (cách nhau " ") =>e.g class="app-navbar app-navbar__heading" => call: .app-navbar/.app-navbar__heading/.app-navbar.app-navbar__heading
		=> note: đặt tên class theo tiêu chuẩn BEM.

1.2.2. Css selector: chọn các ptu (elements) --> để style cho nó, 3 loại elememt selector, id selector, class selector
 	- note: +) cách call = link doc: https://www.w3schools.com/cssref/css_selectors.asp
		+) 1 thẻ có thể cả ID & class, đặt tên 1/n` class cho thẻ html = (cách nhau dấu cách "") 
		e.g => cách đặt tên, <h2 id="header" class="header header__box" => call: xem document chi tiết. 
		+) Reset CSS: *{} --> bước đầu làm css.

	- độ ưu tiên selector: 
		+)  Internal, External: dựa vào cách đặt before, after của code, tag <style> gọi sau --> đc ưu tiên hơn <link> trc, ngc lại đặt code <style> trước <link>, ưu tiên <link> hơn.
		+) !important (+max) > Inline (+1000) > #id (+100) > .class (+10) > tag (+1) = (ưu tiên điểm cao hơn)
		+) Equal Specifitical? => Khi gọi lại trùng nhau => ưu tiên cái gọi sau
		+) Universal selector and inherit? (Độ ưu tiên Universal và inherit = 0). Universal: *{} , inherit: html {}

1.2.3. CSS Variable: 
	- why đặt biến? tái use lại, chỉ khai báo 1 lần, when change chỉ fix 1 chỗ declare.
	- 2 type: gloal(declare in :root) & local(declare in <tag>)
	=> syntax: --name_variable-attribute, e.g: --text-color: #fff;

1.2.4. CSS Units: 
	- 2 type: absolute(tuyet doi) & relative(tuong doi):
	- absolute: px,pt,cm,mm,... (thg use: px)
	- relative:
		+) %: change follow <body>, use to: chia layout 
		+) rem => change follow <html>, thg dc uses n` > (em), rem used cho units của kích thước màn hình PC, Tablet, Mobile,..
		+) em => change follow phụ thuộc vào thuộc tính cùng tên ở thẻ gần nhất, tính từ ngoài thẻ đó: ... -> <body> … -> <html> …. -> <style>
		+) vw & vh (viewport-width & viewport-heiht): vw: khung nhìn ngang màn hình & vh:  khung nhìn dọc màn hình, (vw,vh) # (%), vì: % phụ thuộc <body>, còn vw,vh phụ thuộc khung nhìn ngang/dọc. 
		+) còn rất nhiều units khác,...

1.2.5. CSS Funtions:
	=> var(): gọi biến
	=> linear-gradient(): dải màu chuyển đều đặn
	=> rgba(): độ trong suốt màu.
	=> rgb(): màu bthg
	=> calc(): tính toán?, calc(10px + 12%)
	=> attr(): get values của attr, thg use vs lớp giả(Pseudo elements) 
	=> 1 số function khác,...

	
1.2.6 Pseudo classes: lớp giả
	=> :root => declare biến
	=> :hover  => when di chuot=> run
	=> :active   => when click=> run
	=> :first-child  => select đàu tiên.
	=> :last-child => select cuối.
	=> :nth-child(?) => select theo index
	=> 1 số  khác,...


1.2.7. Pseudo elements: ptu giả
	=> ::before => luôn phải có content: ""; & vtri: đầu
	=> ::after  => tg tu & vtri: cuối.
	=> ::first_letter => ptu đầu of dòng
	=> ::first-line => dòng đầu of đoạn
	=> ::selection =>ptu chon




--PART 2: Đệm, viền và khoảng lề (CSS)
-------------------------------------------
- Marign[Border(Padding(content))]
- 4 attribute (4 hướng): (top) & (right) & (bottom) & (left) => chiều kim đồng hồ.
- quy tắc khi declare: e.g: padding --> > tg tự cho margin, border.
	+) padding: 10px => tự hiểu cả 4
	+) padding: 10px 12px => (top-bottom) & (left-right)
	+) padding: 10px 12px 14px => (top) & (right-left) & (bottom)
	+) padding: 10px 12px 14px 8px => (top) & (right) & (bottom) & (left)

- note: padding, border làm dày kích thước so vs ban đầu chưa có padding/border.

- tip: use float:left/right; => làm all elment chịu ảnh hg đẩy sang left/right.

-------------------------------------------
2.1. Padding
	- Use dev tool: trỏ đến → computed: chi tiết khối div đó.
	- padding(content): ôm content
	

2.2. Border
	- border ôm padding, margin ko hẳn ôm border
	- các attribute khác = https://www.w3schools.com/css/css_border.asp 
	- border: 10px solid #333;  =>  width > style > color => border-top/tg tự 3 hướng còn lại
	- Note: application cho việc tạo mũi tên hình tam giác & can create 1 hình đặc biệt.
	

2.3. Margin
	- margin: tạo khoảng cách => mục đích tách nhau (ko làm dày kích thước như padding/border),  padding& border chỉ làm dày lên chứ ko tách nhau ra đc.
	- 


2.4. Box-sizing
	- khi thêm padding/border => tăng size width&height so vs khi chưa có => giữ nguyên như size ban đầu, use: box-sizing: border-box; 
	- khi  size width&height tăng quá lớn => box-sizing, ko tác dụng.
	- 1 số attribute khác: unset; => hủy đi




--PART 3: Thuộc tính tạo nền (CSS)
-------------------------------------------
- Background Shorthand:  background: #fff url('../img/slider/slider1.jpg') top center / cover no-repeat;
	=>  background: mau(#fff) url() vtri(top-center) / kichthuoc(cover) tinhschat(ko lặp)

- opacity: 1->0; => attr làm giảm độ tương phản

-------------------------------------------

3.1. Background-clip
	-  quyết định đổ background color từ đâu (use cùng với attr background-color)
	- background-clip: padding-box; => đổ từ padding.  || content-box;  => đổ từ content 
		& default: đổ từ border-box.


3.2. Background-image
	- syntax: background-image: url();
	- can use add attr khác = cách nhau "," => background-image: url(), url();
	- 1 số attr đb: background-size: 100%; background-repeat: no-repeat;/ repeat; lặp / repeat-x; lặp chieu ngang / repeat-y; lặp dọc


	
3.3. Background-size keywords
	- thay vì sử dụng units tương đối/tuyệt đối như: background-size: 100%;/50px 
		=> sử dụng keyword: 
			+) contain: auto chọn chiều lớn hơn để căn ko bị vỡ ảnh và khi change size khung nhìn => ảnh ko bị che khuất.
			+) cover:  auto ....(cùng t/c) nhưng khi change size khung nhìn => ảnh bị che khuất.


3.4. Background-origin
	- tính chất tg tự vs Background-clip nhg chon vtri đổ ảnh từ đâu, use cùng vs background-image).



3.5. Background-position
	- vị trí image
	- background-position: top right => trên-phải // background-position: top  => default 1 values là center. 
		// background-position: top 10px right 20px => kết hợp key-word vs value tuyệt đối,...
		// background-position: 10px 20px; (trục Ox, Oy) => kết hợp trục tọa độ...




--PART 4: Thuộc tính vị trí
-------------------------------------------
- Trong UI sẽ có các tầng layout chồng lên nhau để show và chúng sẽ có vtri đặc biệt, e.g: click vào "Thông báo" => 1 Popup show list thông báo, vtri của nó ngay bên dưới lề thẳng với chữ "Thông báo.
	=> Vậy use để css vtri cho 1 số trg hợp đb = 4 loại: Relative (tg đối), absolute (tuyệt đối), fixed (change pụ thuộc khung nhìn(vh/vw)), sticky (change pụ thuộc khung nhìn (vh/vw), ko đc nhiều trình duyệt hỗ trợ).
	=> use top/right/bottom/left để fix vtri.	

- Tip: mờ trang web (thường use để khi có popup con hiện lên, mờ đi chỗ ko thuộc con) = set 4 hướng =0 và ko set width, height


- note khi làm popup nổi lên UI rất hay bị lỗi các layer đè nhau => xét vtr uu tiên show trên các tầng layout của Ui = z-index: >1 (values >> => ưu tiên >>)



-------------------------------------------

4.1. CSS Position: Relative
	- Relative (tg đối): lấy chính nó làm gốc tọa độ, tính chất ko bị pu thuoc đtg nào.
	- áp dụng:      +) muốn di chuyển 4 hướng 
			+) làm tọa độ oxy cho tk con (absolute;)			
		


4.2. CSS Position: Absolute
	- Absolute (tuyet đối): tính chất bị pu thuoc vào thằng <tag> cha gần nhất có thuoc tính position(1in4) để lấy cha đó làm gốc tọa độ.
	- áp dụng: khi cần di chuyển vtri thằng con xung quanh thằng cha => use Absolute.


4.3. CSS Position: Fixed
	- Fixed: bị pu thuoc vào thằng cửa sổ trình duyệt 
	- áp dụng: thg để dính thanh Header cố định trên đầu, khi cuộn lên xuống --> vẫn cố định trên. => top: 0 => trên / bottom: 0; => cuối


4.4. CSS Position: Sticky
	- Sticky: làm để header, bar,.. bám dính dính bất kì đâu trên UI. 
	- note: fixed cx là bám dính nhưng dính top/bottom. 
	- note: không đc hỗ trợ trên nhiều trình duyệt => use thêm attribute của từng browser cung cấp.




--PART 5: Project 1: Xây dựng Web The Band
-------------------------------------------
- Website mẫu: https://www.w3schools.com/w3css/tryw3css_templates_band.htm
	=> đây là 1 trang thể loại ONE PAGE
- 4 step triển khai:
	+) phan tich
	+) dựng base (xây móng)
	+) xd từng pần theo pt
	+) hoàn thiện

- Cấu trúc Web: (bổ sung)



- Thành phần đặc biệt: (bổ sung h/ả)
	+) UI Modal: là giao diện nằm trên all UI web, can là modal: login/logout/thanhtoán/......
	+) thành phần: 1 màn hình nhỏ chính giữa Modal, xung quanh có 1 lớp overplay mờ mờ.
		=> cho nó nằm trên UI web => use position: fixed; 
	+) Để cho tk con show nằm chính giữa thằng cha => use t/c flexbox => display: flex; và căn giữa chiều ngang & dọc.


- Đưa phần 5.3. Tạo project base => lên đây + thêm 1 số chú thích nữa.  (bổ sung)



- Tất cả shorthand = key-word + ấn "tab" (can demo ảnh nếu khó)
	+) tip create fast folder, file. => đã nêu ở bài trc
	+) declare css nhanh => link:css
	+) create <div> cùng đặt tên id, class => #name_id  || .class_name
	+) (demo ảnh) Multiple selections (multi-cursor): use nhiều con trỏ chuột thao tác code nhanh hơn 
		=> step 1: xác định vùng có sự giống nhau --> chọn vùng đó = bôi đen vùng cần thao tác đó (check lại đã đúng nhg phần select?)
		=> step 2: 2 cách: cách 1: ctrl +shift + L → chọn all  // cách 2: ctrl +D → chọn từng cái 1
		=> step 3: để thao tác bôi đên 1 đoạn code (e.g: bôi đen các tên class) => alt + shift + ( → ) 
		Beside, Tạo multi-cursor = alt + shift + (mũi tên down)

	+) tạo kết hợp các tag: ul#nav>li*5>a
	+) ấn alt + (mũi tên lên/xg) => di chuyển dòng code lên/xuống.
	+)
	+)


- Tính chất của 1 số attribute, tag đặc biệt:
	+) block => t/c khối chiếm hết width bởi tag cha chứa nó, phân tách rõ dàng
	+) inline => trong 1 dòng 
	+) display: => hiển thị ntn? => e.g: display: inline-block => t/c block + t/c inline // display: block => t/c block 
	+) <a>: 
		.) text-decoration: none;  =>  bỏ gạch chân của tag <a>


	+) <ul>:
		.) list-style: none;  => remove dấu . của default


	+) text-transform: uppercase;   => viết hoa
	+)
	+) box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);  => đổ bóng

	+) font-weight: 300; => độ dày/mỏng text

	+) float:left/right; => làm all elment chịu ảnh hg đẩy sang left/right.
	+) Css Text: letter-spacing: 4px; => giãn chữ  // font-style: italic; => chữ nghiêng // text-align: justify;  => căn đều 2 bên
	+) opacity: 1->0; => attr làm giảm độ tương phản
	+) line-height: 1.4(English) or 1.6 (tiếng việt)   => khoảng cách 2 dòng
	+) Border: border-radius: 4px; => bo góc ảnh // 
	+) Khi Css để dễ dàng quan sát nhất => sử dụng dev tools
		.) Ấn F12 --> open dev tool
		.) 3 cách css:  cách 1: css trên element.style {} chính là Inline style
			cách 2: trên dev tool --> ấn vào tag cần css → ấn “+” → css trực tiếp
			cách 3: (ưu tiên use) declare các class vào file .css --> save lại --> lên dev tool, css thẳng vào class đó.
	+) “for” trong <label> --> khi click vào label thì auto “for” tới id tag cần chọn, e.g: khi click label → tới thẻ input (for chỉ chứa id, for=”#id”)
	+) Khi use Responsive, 1 số attribute ko nên fix cứng values tuyệt đối, vì: khi change width/height => sai vtri 
		=> use hàm calc(); => e.g: max-width: calc(100% - 32px);
		=> use value tương đối: %, vw/vh
	+)
	+)
	+)
	+)
	+)
	+)



- Skill:
	+) Căn giữa:
		1. căn giữa dòng(<tag>), đoạn bôi đen => line-height = height cuar tag chứa
			=> beside, use padding
		2. căn giữa bthg: width: 100% => text-align: center; 



	+) Hover:
		.) color/background-color
		.) cursor: pointer;    => bàn tay
		.)
		.)
		.)
		.)

	+) gộp 2/n` selector = cách nhau dấu ", " => e.g: .header__navbar-item, .header__narbar-item-link { }

	+) how to tìm nhanh selector trong file .css  => COn trỏ hiện tại ở file .css => open OUTLINE trong "EXPLORER"
 
	+) thiết kế đẹp: set vaules tuyệt đối là num : hết cho 4, e.g: 12px, 16px

	+) khi ko nhớ attribute css =>  tìm search gg, syntax: css + attribute + property


	+) xét min/max cho width/height => e,g: min-height => để xét cho bài toán hiển thị.


  	+) khi use thư viện cho icon, khi muốn css cho icon đó thì đặt thêm tên mới class --> vì: sau này đổi icon đó thì css ko bị mất. 

	+) dính header lên top => position: fixed;   top: 0;  right: 0;   left: 0; 

	+) để di chuyển tk con xung quanh tk cha, e.g: ghi đè text lên ảnh => tk cha là position: related& con là position: absolute
	+) khi run code bị error thì trên dev tool trong "Console" -> show error.

	+) Khi làm popup nổi lên UI rất hay bị lỗi các layer đè nhau => xét vtr uu tiên show trên các tầng layout của Ui = z-index: >1 (values >> => ưu tiên >>)
	+) Khi sử dụng float => sẽ làm thằng cha ko bao đc 3 tk con => xử lý: tạo lớp giả cho tag cha đó, e.g: .row::after {content: ""; display: block; clear: both;}
	+) 1 số tag (span, a) ko có tính chất block => thêm display: block vào => can set width/height/margin: âm
		=> beside, display: flex => t/c block OR: float: left/right; => t/c block
	+) 1 số trg hợp căn lề margin/padding ngoài use values (+), can use: values (-) 

	+) Kĩ thuật tạo animation (bổ sung ảnh)



	+)
	+)
	+)
	+)
	+)
	+)


-------------------------------------------

5.1. Phân biệt & gọi tên các thành phần
	- Thanh phan 1 web: tham khảo: https://viblo.asia/p/code-giao-dien-website-tu-ban-design-phan-1-07LKXkd85V4 
		=> (bổ sung ảnh thành pan trong doc)
	- Cau truc:
		+ Header
			section.top-bar
			section.nav-bar
		+ Main
			section 1
			section 2
			...
		+ Footer
	- Details thành phần:
		+ Header (đầu trang): 
			=> position: thg trên cùng => (bổ sung ảnh trong doc)
		+ Navigation: 
			=> chứa 1 vài button điều hướng web(e.g: home, band, tour,...) => (bổ sung ảnh trong doc)
			=> position: nằm trong thanh Header
		+ Breadcrumb: 
			=> map của giao diện hiện tại, e.g: Home > Web development > Front End > html-css => (bổ sung ảnh trong doc)
			=> position: dưới Header, trên nội dung cua 1 th.phần web 
		+ Sidebar: 
			=> thanh chứa danh sách thành phần 1 mục/web, có thể coi là 1 navi
			=> position: thg đặt ở bên trái/phai man hình, .  => (bổ sung ảnh trong doc)
		+ Slider: 
			=> phần trình diễn nội dung có thể là hình ảnh, video, âm thành,... thg là hình ảnh.
			=> position: ko cố dịnh vtri     => (bổ sung ảnh trong doc)
		+ Banner: 
			=> là image quảng cáo 
			=> position: ko cố dịnh vtri     => (bổ sung ảnh trong doc)

		+ Content:
			=> chứa thành phan nội dung chính
			=> position: nằm bên trong giữa web     => (bổ sung ảnh trong doc)

		+ Footer (chân trang):
			=> thường là thông tin liên quan web.
			=> position: cuối trang     => (bổ sung ảnh trong doc)


5.2. Phân tích dự án
	- Header
	- Slider
	- Content: Container: (chứa content, có thể coi là content luôn)
		=> About
		=> Tour
		=> Contact
		=> Image
	- Footer




5.3. Tạo project base
	- Crete project: 
		=> cơ bản 1 folder assets(3 folder con: css, img, fonts) + index.html
	- setting 1 số cơ bản: 
		+) HTML => index.html 
			=> đặt title, icon web + declare: link css + declare: link 1 số thứ # (thư viện: fonts, icon, image,....)
			=> note: use 1 số thư viện hỗ trợ icon, fonts => e.g: https://themify.me/themify-icons // https://fontawesome.com/icons 
				.) cách use: gọi đến nhg tên class nó cung cấp.
		+) CSS  => 3 file(base.css: css chung, main.css: css riêng, responsive.css: css tablet, mobile) 
			=> base.css => Reset CSS => * {} // html {}  // body {}
				.) css * { margin: 0; padding:0; box-sixing: border-box}
				.) css html { font-size: 1.4rem; scroll-behavior: smooth; font-family: Helvetica, Arial , sans-serif;}
				.) cs  body {}

			=> phần này nêu sơ qua => đến phần project shopee cụ thể.
			=> Vì mỗi 1 browser (trình duyệt) có css deafult => reset css.

	



	- Dựa vào phân tích, triển khai lần lượt.
		+) Dựng khung: 1 tag div chứa contain thành phàn (Header, Main, Footer,...)
			=> note: những th.phần chính, đặt id thay vì class, còn lại đặt class bthg



5.4. Header CSS
	- phan tich: +) vị trí? => đầu
		+) kích thước => widht = width trình duyệt  ; height = use dev tool
		+) màu sắc => use dev tool => black
		+) kiểu dáng(font text, hình tròn,....)

	- create ds gồm: home, band, tour, contact




5.5. Navigation CSS
	- Menu đa cấp, đặc tính :hover vào show => bthg sẽ là hidden, khi : hover là show.
		=> e.g: menu 2 cấp: cấp1: tk cha và cấp2: 1 số tk con => use CSS position => gắn mấy tk con dưới cha.
	- 


5.6. Header search CSS

5.7. Header fixed CSS

5.8. Slider CSS

5.9. Team section CSS

5.10. Tour tickets CSS

5.11. Tour places CSS

5.12. Buy tickets modal

5.13. Buy tickets modal Javascript logic
	- Để lắng nghe hành động (click,...) use js => Đặt tên cho tag đó vs syntax: js-...
	

khi ấn 1 trong 3 nút, → get được cái element có class=”modal” → thêm “open” ⇒ mục đích hiện form “tickets”: đã đc css. còn để tắt => ấn “X” → remove bỏ “open”


5.14.

	- 



	- 




	- 



	- 





	- 





	- 










--PART 5: Project 1: Xây dựng Web The Band
-------------------------------------------





-------------------------------------------



















--PART 5: Project 1: Xây dựng Web The Band
-------------------------------------------





-------------------------------------------





















